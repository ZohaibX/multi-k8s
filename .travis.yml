sudo: required
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD) # this is command to get the ID of latest commit of this project -- this will always be different for different commits
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1 # special command is for gcloud commands below
before_install:
  - openssl aes-256-cbc -K $encrypted_d2bedf8223e1_key -iv $encrypted_d2bedf8223e1_iv -in super_secret.json.enc -out super_secret.json -d
  # this command coming from #!(5)
  - curl https://sdk.cloud.google.com | bash > /dev/null; # command to download google sdk
  - source $HOME/google-cloud-sdk/path.bash.inc # configuration for google sdk
  - gcloud components update kubectl # install and update kubectl inside travis environment
  - gcloud auth activate-service-account --key-file service-account.json # this command is like IAM user as AWS -- we will put user data into service-account.json file
  # create service account on the IAM tab on google cloud platform
  # after creating a service account -- i will have to create a key and select json -- and a json file will be downloaded
  # to encrypt all that json data --  we need travis cli and to download travis cli -- we need ruby image installed
  #! steps to download ruby and travis
  # go to this project in powershell
  # docker run -it -v ${pwd}:/app ruby:2.4 sh #? sh command to open the shell and for powershell admin only
  # now in the shell -- do ls and find 'app' and then cd app to get inside of that folder . and after doing ls again. i should see this project
  # gem install travis #? in the same opened shell
  # travis login --github-token [token] #? in the same shell, and token will be generated from https://github.com/settings/tokens with good access
  # copy the downloaded json file into the project folder and rename it
  # then we will encrypt that file using command --
  # travis encrypt-file --pro super_secret.json -r zohaibbutt045/multi-k8s #? service-account.json is the file name to encrypt and at the end, we need to give repository name
  #!(5) after that, we will get a command, which we have to paste on the start of before_install method
  # now if i do ls in powershell. i will get one more enc file created
  # must delete the original account file after the enc file created
  - gcloud config set project multi-k8s-297711 # get the id of project
  - gcloud config set compute/zone us-central1-c # we will get the zone like us-east when we create kubernetes cluster in our project
  - gcloud container clusters get-credentials cluster-1 # get the cluster name when we create one
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t 03004968719/react-tests -f ./client/Dockerfile.dev ./client #? bcoz we wanna run tests for this image
  # 03004968719/react-tests is just naming of the build

script:
  - docker run -e CI=true 03004968719/react-tests npm run test # CI=true must - to exit the test when done

#! Deployment to Kubernetes
deploy:
  provider: script
  script: bash ./deploy.sh # this command means that we will write our deploy command by our own in our own file
  on:
    branch: main

  #! Important
  # write these lines from before_install section to google cloud built-in terminal

  # gcloud config set project multi-k8s-297711
  # gcloud config set compute/zone us-central1-c
  # gcloud container clusters get-credentials cluster-1

  # then we will create a secret password for postgres database
  # kubectl create secret generic pgpassword --from-literal PGPASSWORD=12345678

  # download Helm in cloud console terminal. write 3 next commands in the terminal
  # curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
  # chmod 700 get_helm.sh
  # ./get_helm.sh

  # Install Ingress-Nginx - by writing some commands on the cloud console terminal
  # helm repo add stable https://charts.helm.sh/stable
  # helm install my-nginx stable/nginx-ingress --set rbac.create=true
